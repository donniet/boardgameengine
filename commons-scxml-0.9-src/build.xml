<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<!--build.xml generated by maven from project.xml version 0.9
  on date May 22 2008-->

<project default="jar" name="commons-scxml" basedir=".">
  <property name="defaulttargetdir" value="target">
  </property>
  <property name="libdir" value="target/lib">
  </property>
  <property name="classesdir" value="target/classes">
  </property>
  <property name="testclassesdir" value="target/test-classes">
  </property>
  <property name="testclassesdir" value="target/test-classes">
  </property>
  <property name="testreportdir" value="target/test-reports">
  </property>
  <property name="distdir" value="dist">
  </property>
  <property name="javadocdir" value="dist/docs/api">
  </property>
  <property name="final.name" value="commons-scxml-0.9">
  </property>
  <path id="build.classpath">
    <fileset dir="${libdir}">
      <include name="**/*.jar">
      </include>
    </fileset>
  </path>
  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}">
    </mkdir>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}">
      </equals>
    </condition>
    <!--Test if JUNIT is present in ANT classpath-->

    <available property="Junit.present" classname="junit.framework.Test">
    </available>
  </target>
  <target name="compile" description="o Compile the code" depends="get-deps">
    <mkdir dir="${classesdir}">
    </mkdir>
    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="src/main/java">
        </pathelement>
      </src>
      <classpath refid="build.classpath">
      </classpath>
    </javac>
    <mkdir dir="${classesdir}/META-INF">
    </mkdir>
    <copy todir="${classesdir}/META-INF">
      <fileset dir=".">
        <include name="NOTICE.txt">
        </include>
        <include name="LICENSE.txt">
        </include>
      </fileset>
    </copy>
  </target>
  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
    </jar>
  </target>
  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}">
    </delete>
    <delete dir="${distdir}">
    </delete>
  </target>
  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
    <mkdir dir="dist">
    </mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar">
      </fileset>
      <fileset dir="${basedir}" includes="LICENSE*, README*">
      </fileset>
    </copy>
  </target>
  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures.">
    </fail>
  </target>
  <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
    <mkdir dir="${testreportdir}">
    </mkdir>
    <junit dir="./" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
      <sysproperty key="basedir" value=".">
      </sysproperty>
      <formatter type="xml">
      </formatter>
      <formatter usefile="false" type="plain">
      </formatter>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${testclassesdir}">
        </pathelement>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
      <batchtest todir="${testreportdir}">
        <fileset dir="src/test/java">
          <include name="org/apache/commons/scxml/SCXMLTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/env/EnvTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/env/faces/EnvFacesTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/env/jexl/EnvJexlTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/env/jsp/EnvJspTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/env/servlet/EnvServletTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/invoke/InvokeTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/io/IOTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/issues/IssuesTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/model/ModelTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/semantics/SemanticsTestSuite.java">
          </include>
          <include name="org/apache/commons/scxml/test/TestingTestSuite.java">
          </include>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="junit-present" unless="Junit.present" depends="init">
    <echo>================================= WARNING ================================</echo>
    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
    <echo>==========================================================================</echo>
  </target>
  <target name="compile-tests" if="Junit.present" depends="junit-present,compile">
    <mkdir dir="${testclassesdir}">
    </mkdir>
    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="src/test/java">
        </pathelement>
      </src>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
    </javac>
    <copy todir="${testclassesdir}">
      <fileset dir="src/test/java">
        <include name="**/*.xml">
        </include>
        <include name="**/*.gif">
        </include>
      </fileset>
    </copy>
  </target>
  <target name="javadoc" description="o Generate javadoc" depends="get-deps">
    <mkdir dir="${javadocdir}">
    </mkdir>
    <tstamp>
      <format pattern="2005-yyyy" property="year">
      </format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  The Apache Software Foundation. All Rights Reserved.">
    </property>
    <property name="title" value="Commons SCXML 0.9 API">
    </property>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="src/main/java" packagenames="org.apache.commons.scxml.*">
      <classpath>
        <path refid="build.classpath">
        </path>
      </classpath>
    </javadoc>
  </target>
  <target name="get-deps" unless="noget" depends="init">
    <!--Proxy settings works only with a JDK 1.2 and higher.-->

    <setproxy>
    </setproxy>
    <get dest="${libdir}/junit-3.8.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/junit/junit/3.8.2/junit-3.8.2.jar">
    </get>
    <get dest="${libdir}/commons-digester-1.8.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/commons-digester/commons-digester/1.8/commons-digester-1.8.jar">
    </get>
    <get dest="${libdir}/commons-beanutils-1.7.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar">
    </get>
    <get dest="${libdir}/commons-el-1.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/commons-el/commons-el/1.0/commons-el-1.0.jar">
    </get>
    <get dest="${libdir}/commons-jexl-1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/commons-jexl/commons-jexl/1.1/commons-jexl-1.1.jar">
    </get>
    <get dest="${libdir}/commons-logging-1.1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar">
    </get>
    <get dest="${libdir}/servletapi-2.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar">
    </get>
    <get dest="${libdir}/jsp-api-2.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar">
    </get>
    <get dest="${libdir}/myfaces-api-1.1.5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/org/apache/myfaces/core/myfaces-api/1.1.5/myfaces-api-1.1.5.jar">
    </get>
    <get dest="${libdir}/xalan-2.6.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven2/xalan/xalan/2.6.0/xalan-2.6.0.jar">
    </get>
  </target>
  <target name="install-maven">
    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
    </get>
    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
    </unjar>
  </target>
</project>
