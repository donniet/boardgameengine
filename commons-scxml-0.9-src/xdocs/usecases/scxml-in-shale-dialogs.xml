<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

<document>

 <properties>
  <title>Commons SCXML Usecases - Shale dialogs</title>
  <author email="dev@commons.apache.org">Commons Documentation Team</author>
 </properties>

 <body>

  <section name="SCXML documents to describe Shale dialogs">

   <p><a href="http://shale.apache.org/">Shale</a> is
   &quot;<i>a modern web application framework, fundamentaly
   based on JavaServer Faces</i>&quot;. The Shale Framework includes a Dialog
   Manager, to describe &quot;conversations&quot; or &quot;dialogs&quot;
   (involving multiple views) with the user. Such a dialog is described
   using a state-machine like declarative notation defined by the Shale
   Framework. An alternative is using SCXML to describe the Shale dialogs
   by introducing a <code>DialogNavigationHandler</code> that uses the
   Commons SCXML engine.
   </p>

   <subsection name="Motivation">
    <ul>
     <li>SCXML semantics support parallelism, allowing multiple dialogs
     to execute at the same time (a.k.a regions), and interact with each
     other. This will be useful as Shale Dialog Managers evolve.</li>
     <li>The Commons SCXML implementation allows for registering listeners
     that get notified as the state machine executes (onentry, onexit,
     ontransition).</li>
     <li>Those developing multi-channel applications, or using frameworks
     that use SCXML for the controller bits in other contexts (e.g. 
     RDC framework), may be inclined towards SCXML-based authoring for Shale
     dialogs.</li>
    </ul>
   </subsection>

  </section>

  <section name="Details">

   <p>Please refer to the <a href="http://shale.apache.org/">Apache Shale website</a>
   for details. The relevant module is the
   <a href="http://shale.apache.org/shale-dialog-scxml/">Shale Dialogs (Commons SCXML Implementation)</a>
   module.</p>

  </section> 

 </body>

</document>
